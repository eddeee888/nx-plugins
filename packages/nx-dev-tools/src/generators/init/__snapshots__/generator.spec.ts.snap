// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`nx-dev-tools generator Files generation libs/dev/.env.docker-compose content 1`] = `
"PRIMARY_DOMAIN=bam.fakecom

MAIN_SERVICE_NAME=bam
MAIN_SERVICE_HOST=host.docker.internal:4200 # Note: Update port to match your app's port that runs on the host
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/dev-tools.json content 1`] = `
"{
  "primaryDomain": "bam.fakecom",
  "infra": {
    "files": [
      "libs/dev/dnsmasq/docker-compose.yml",
      "libs/dev/reverse-proxy/docker-compose.yml"
    ],
    "envFile": "libs/dev/.env.docker-compose"
  }
}
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/dnsmasq/dnsmasq.conf content 1`] = `
"address=/fakecom/127.0.0.1
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/dnsmasq/docker-compose.yml content 1`] = `
"version: '3.7'

services:
  dnsmasq:
    image: 4km3/dnsmasq:2.85-r2-alpine-3.14
    ports:
      - 53535:53/tcp
      - 53535:53/udp
    cap_add: ['NET_ADMIN']
    volumes:
      - libs/dev/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/project.json content 1`] = `
"{
  "name": "libs/dev",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/dev",
  "projectType": "library",
  "targets": {
    "nw-cert": {
      "executor": "@eddeee888/nx-dev-tools:setup",
      "options": {
        "command": "cert"
      }
    },
    "nw-up": {
      "executor": "@eddeee888/nx-dev-tools:setup",
      "options": {
        "command": "network-up"
      }
    },
    "nw-down": {
      "executor": "@eddeee888/nx-dev-tools:setup",
      "options": {
        "command": "network-down"
      }
    },
    "up": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "up",
        "args": "-d"
      }
    },
    "down": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "down"
      }
    },
    "logs": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "logs"
      }
    },
    "start": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "start"
      }
    },
    "stop": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "stop"
      }
    },
    "open": {
      "executor": "@eddeee888/nx-dev-tools:infra",
      "options": {
        "subCommand": "open"
      }
    }
  },
  "tags": []
}
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/reverse-proxy/.gitignore content 1`] = `
"certificates/
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/reverse-proxy/docker-compose.yml content 1`] = `
"version: '3.7'

services:
  reverse-proxy:
    image: nginx:1.23.1-alpine
    tty: true
    ports:
      - 80:80
      - 443:443
    depends_on:
      - dnsmasq
    environment:
      PRIMARY_DOMAIN: \${PRIMARY_DOMAIN}
      MAIN_SERVICE_NAME: \${MAIN_SERVICE_NAME}
      MAIN_SERVICE_HOST: \${MAIN_SERVICE_HOST}
    volumes:
      - libs/dev/reverse-proxy/templates:/etc/nginx/templates
      - libs/dev/reverse-proxy/certificates/primary/device.crt:/usr/share/nginx/certificates/primary/device.crt
      - libs/dev/reverse-proxy/certificates/primary/device.key:/usr/share/nginx/certificates/primary/device.key
      - libs/dev/reverse-proxy/proxy.conf:/etc/nginx/proxy.conf
      - libs/dev/reverse-proxy/ws.conf:/etc/nginx/ws.conf
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/reverse-proxy/proxy.conf content 1`] = `
"proxy_redirect    off;
proxy_set_header  Host $host;
proxy_set_header  X-Real-IP $remote_addr;
proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header  X-Forwarded-Host $server_name;
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/reverse-proxy/templates/http.conf.template content 1`] = `
"upstream \${MAIN_SERVICE_NAME} {
  server \${MAIN_SERVICE_HOST};
}

server {
  listen 80;
  
  location / {
        return 301 https://$host$request_uri;
  }      
}

server {
  listen 443 ssl http2;
  server_name \${PRIMARY_DOMAIN};
  ssl_certificate /usr/share/nginx/certificates/primary/device.crt;
  ssl_certificate_key /usr/share/nginx/certificates/primary/device.key;

  location / {
    proxy_pass http://\${MAIN_SERVICE_NAME};
    include /etc/nginx/proxy.conf;
    include /etc/nginx/ws.conf;
  }
}
"
`;

exports[`nx-dev-tools generator Files generation libs/dev/reverse-proxy/ws.conf content 1`] = `
"proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "Upgrade";
proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
"
`;
